// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Modules.NorthWind.Configuration
{
    using Modules.NorthWind.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
    // Orders Qry
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public  class OrdersQryConfiguration : IEntityTypeConfiguration<OrdersQry>
    {
    public void Configure(EntityTypeBuilder<OrdersQry> builder)
        {
            builder.ToTable("Orders Qry", "dbo");
            builder.HasKey(x => new { x.OrderId, x.CompanyName });

            builder.Property(x => x.OrderId).HasColumnName(@"OrderID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.CustomerId).HasColumnType("nchar(5)").HasMaxLength(5);
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeID").HasColumnType("int");
            builder.Property(x => x.OrderDate).HasColumnName(@"OrderDate").HasColumnType("datetime");
            builder.Property(x => x.RequiredDate).HasColumnName(@"RequiredDate").HasColumnType("datetime");
            builder.Property(x => x.ShippedDate).HasColumnName(@"ShippedDate").HasColumnType("datetime");
            builder.Property(x => x.ShipVia).HasColumnName(@"ShipVia").HasColumnType("int");
            builder.Property(x => x.Freight).HasColumnType("decimal(19,4)");
            builder.Property(x => x.ShipName).HasColumnType("nvarchar(40)").HasMaxLength(40);
            builder.Property(x => x.ShipAddress).HasColumnType("nvarchar(60)").HasMaxLength(60);
            builder.Property(x => x.ShipCity).HasColumnType("nvarchar(15)").HasMaxLength(15);
            builder.Property(x => x.ShipRegion).HasColumnType("nvarchar(15)").HasMaxLength(15);
            builder.Property(x => x.ShipPostalCode).HasColumnType("nvarchar(10)").HasMaxLength(10);
            builder.Property(x => x.ShipCountry).HasColumnType("nvarchar(15)").HasMaxLength(15);
            builder.Property(x => x.CompanyName).HasColumnType("nvarchar(40)").IsRequired().HasMaxLength(40).ValueGeneratedNever();
            builder.Property(x => x.Address).HasColumnType("nvarchar(60)").HasMaxLength(60);
            builder.Property(x => x.City).HasColumnType("nvarchar(15)").HasMaxLength(15);
            builder.Property(x => x.Region).HasColumnType("nvarchar(15)").HasMaxLength(15);
            builder.Property(x => x.PostalCode).HasColumnType("nvarchar(10)").HasMaxLength(10);
            builder.Property(x => x.Country).HasColumnType("nvarchar(15)").HasMaxLength(15);



//TODO: Deleted foreign key and relation mapping configuration rows from here


        }
    }
  
}
// </auto-generated>
