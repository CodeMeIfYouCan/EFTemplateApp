// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Modules.Dms.DataLayer
{
    using EFTemplateCore;
    using EFTemplateCore.Interfaces;
    using Modules.Dms.DataLayer.Data;
    using Modules.Dms.DataLayer.Data.Interfaces;
    using Modules.Dms.DataLayer.Domain;
    using Modules.Dms.DataLayer.Domain.Enums;
    using System.Data.Common;
	using Microsoft.EntityFrameworkCore;
	using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class FakeDmsContext : IDmsContext
    {
        public DbSet<Document> Documents { get; set; }

        public FakeDmsContext()
        {
            Documents = new FakeDbSet<Document>("Id");

            InitializePartial();
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        partial void InitializePartial();

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker _changeTracker;
        public Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker ChangeTracker { get { return _changeTracker; } }
        
        private Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade _database;
        public Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade Database { get { return _database; } }
        public Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
public Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }

    }
}
// </auto-generated>
